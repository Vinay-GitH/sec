<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Workshop extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->helper(array('form', 'url', 'date'));
        $this->load->library('session', 'encrypt');	
		$this->load->library('form_validation');
        $this->load->model('Workshop_model');
		HLP_is_valid_web_token();
    } 

    /*
     * Listing of workshop
     */
    function index()
    {
        if(!helper_have_rights(CV_WORKSHOP, CV_VIEW_RIGHT_NAME))
		{
			$data['msg'] = '<div class="alert alert-danger alert-dismissible fade in" role="alert"> <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button><b>You do not have insert rights.</b></div>';		
                        redirect(site_url("dashboard"));
		}
        $data['workshop'] = $this->Workshop_model->get_all_workshop();
        $data['title'] = 'Workshop';
        $data['body'] = 'workshop/index';
        $this->load->view('common/structure',$data);
    }
    function listing()
    {
        if(!helper_have_rights(CV_WORKSHOP, CV_VIEW_RIGHT_NAME))
		{
			$data['msg'] = '<div class="alert alert-danger alert-dismissible fade in" role="alert"> <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button><b>You do not have insert rights.</b></div>';		
                        redirect(site_url("dashboard"));
		}
        $data['workshop'] = $this->Workshop_model->get_all_workshop();
        $data['title'] = 'List Workshop';
        $data['body'] = 'workshop';
        $this->load->view('common/structure',$data);
    }
	
    /*
     * Adding a new workshop
     */
    function add()
    {   
        if(!helper_have_rights(CV_WORKSHOP, CV_INSERT_RIGHT_NAME))
		{
			$data['msg'] = '<div class="alert alert-success alert-dismissible fade in" role="alert"> <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button><b>You do not have insert rights.</b></div>';		
            redirect(site_url("dashboard"));
		}
		
		if($this->input->post())
		{
			$this->form_validation->set_rules('Title', 'Title', 'trim|required|max_length[150]');
			$this->form_validation->set_rules('date', 'Date', 'trim|required|max_length[10]');
			$this->form_validation->set_rules('location', 'Location', 'trim|required|max_length[100]');
			$this->form_validation->set_rules('workshop_type', 'Type', 'trim|required');			
			$this->form_validation->set_rules('organised_by', 'Organised By', 'trim|required|max_length[50]');
			$this->form_validation->set_rules('website', 'Website', 'trim|required|max_length[100]');
			$this->form_validation->set_rules('Description', 'Description', 'trim|required|max_length[250]');
			
			if(empty($_FILES['Document']['name']))
			{
				$this->form_validation->set_rules('Document', 'Document', 'required');
			}
			
			if($this->form_validation->run())
			{
				$upload_arr = HLP_upload_img('Document', "uploads/workshop/",'',array("jpg", "jpeg", "png", "gif","pdf"));
				if(count($upload_arr) == 2)
				{ 
					$f_path = 'uploads/workshop/'. $upload_arr[0];
					$txt_dt = date("Y-m-d",strtotime(str_replace("/","-",$this->input->post('date'))));
					$params = array(
									'Title' => $this->input->post('Title'),
									'date' => $txt_dt,
									'location' => $this->input->post('location'),
									'workshop_type' => $this->input->post('workshop_type'),
									'organised_by' => $this->input->post('organised_by'),
									'website' => $this->input->post('website'),
									'Description' => $this->input->post('Description'),
									'Document '=> base_url().$f_path,
									'timestamp' => date("Y-m-d H:i:s")
									);
					$workshop_id = $this->Workshop_model->add_workshop($params);
            		$this->session->set_flashdata('message', '<div class="alert alert-success alert-dismissible fade in" role="alert"> <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button><b>Data save successfully.</b></div>');
				}
				else
				{
					$this->session->set_flashdata('message', '<div class="alert alert-danger alert-dismissible fade in" role="alert"> <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button><b>'.$upload_arr[0].'</b></div>');
				}
			}
			else
			{
				$this->session->set_flashdata('message', '<div class="alert alert-danger alert-dismissible fade in" role="alert"> <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button><b>'.validation_errors().'</b></div>');
			}
			redirect('workshop/add');			
		}
		$data['title'] = 'Add Workshop';
		$data['body'] = 'workshop/add';
		$this->load->view('common/structure',$data);
		
		
       /* if(isset($_POST) && count($_POST) > 0)     
        {   
            if($_FILES['Document']['name'])
                {
                        $file_type = explode('.',$_FILES['Document']['name']);
                        $img_ext = strtolower($file_type[1]);

                        
                                $fName = time().".".$img_ext;
                                if (move_uploaded_file($_FILES["Document"]["tmp_name"],  "uploads/".$fName))
                                {
                                   
                                         $params = array(
                                                        'Title' => $this->input->post('Title'),
                                                        'date' => $this->input->post('date'),
                                                        'location' => $this->input->post('location'),
                                                        'organised_by' => $this->input->post('organised_by'),
                                                        'website' => $this->input->post('website'),
                                                        'Description' => $this->input->post('Description'),
                                                        'Document'=>base_url()."uploads/".$fName
                                                        );
                                }
                                else
                                {
                                        $this->session->set_flashdata('message', '<div class="alert alert-danger alert-dismissible fade in" role="alert"> <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button><b>Document was not uploaded.</b></div>');
                                        redirect('workshop/index');
                                }
                        
                        
                } else {
            $params = array(
				'Title' => $this->input->post('Title'),
				'date' => $this->input->post('date'),
				'location' => $this->input->post('location'),
				'organised_by' => $this->input->post('organised_by'),
				'website' => $this->input->post('website'),
				'Description' => $this->input->post('Description'),
            );
                }
            $workshop_id = $this->Workshop_model->add_workshop($params);
            $this->session->set_flashdata('message', '<div class="alert alert-success alert-dismissible fade in" role="alert"> <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button><b>Data save successfully.</b></div>');
            redirect('workshop/index');
        }*/
        
    }  

    /*
     * Editing a workshop
     */
    function edit($WorkshopID)
    {   
        if(!helper_have_rights(CV_WORKSHOP, CV_INSERT_RIGHT_NAME))
		{
			$data['msg'] = '<div class="alert alert-danger alert-dismissible fade in" role="alert"> <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button><b>You do not have insert rights.</b></div>';		
                        redirect(site_url("dashboard"));
		}
        // check if the workshop exists before trying to edit it
        $data['workshop'] = $this->Workshop_model->get_workshop($WorkshopID);
        
        if(isset($data['workshop']['WorkshopID']))
        {
			if($this->input->post())
			{
				$this->form_validation->set_rules('Title', 'Title', 'trim|required|max_length[150]');
				$this->form_validation->set_rules('date', 'Date', 'trim|required|max_length[10]');
				$this->form_validation->set_rules('location', 'Location', 'trim|required|max_length[100]');
				$this->form_validation->set_rules('workshop_type', 'Type', 'trim|required');			
				$this->form_validation->set_rules('organised_by', 'Organised By', 'trim|required|max_length[50]');
				$this->form_validation->set_rules('website', 'Website', 'trim|required|max_length[100]');
				$this->form_validation->set_rules('Description', 'Description', 'trim|required|max_length[250]');
				
				if($this->form_validation->run())
				{
					$txt_dt = date("Y-m-d",strtotime(str_replace("/","-",$this->input->post('date'))));
					$params = array(
									'Title' => $this->input->post('Title'),
									'date' => $txt_dt,
									'location' => $this->input->post('location'),
									'workshop_type' => $this->input->post('workshop_type'),
									'organised_by' => $this->input->post('organised_by'),
									'website' => $this->input->post('website'),
									'Description' => $this->input->post('Description')
									);
									
					if(!empty($_FILES['Document']['name']))
					{
						$upload_arr = HLP_upload_img('Document', "uploads/workshop/",'',array("jpg", "jpeg", "png", "gif","pdf"));
						if(count($upload_arr) == 2)
						{ 
							$f_path = 'uploads/workshop/'. $upload_arr[0];
							$params['Document'] = base_url().$f_path;
						}
						else
						{
							$this->session->set_flashdata('message', '<div class="alert alert-danger alert-dismissible fade in" role="alert"> <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button><b>'.$upload_arr[0].'</b></div>');
							redirect('workshop/edit/'.$WorkshopID);
						}
					}
					
					$this->Workshop_model->update_workshop($WorkshopID,$params);
					$this->session->set_flashdata('message', '<div class="alert alert-success alert-dismissible fade in" role="alert"> <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button><b>Data updated successfully.</b></div>');
					redirect('workshop');
					
				}
				else
				{
					$this->session->set_flashdata('message', '<div class="alert alert-danger alert-dismissible fade in" role="alert"> <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button><b>'.validation_errors().'</b></div>');
					redirect('workshop/edit/'.$WorkshopID);
				}					
			}
		
			$data['title'] = 'Edit Workshop';
			$data['body'] = 'workshop/edit';
            $this->load->view('common/structure',$data);
			/*
			
			
            if(isset($_POST) && count($_POST) > 0)     
            {   
               if($_FILES['Document']['name'])
                {
                        $file_type = explode('.',$_FILES['Document']['name']);
                        $img_ext = strtolower($file_type[1]);

                        
                                $fName = time().".".$img_ext;
                                if (move_uploaded_file($_FILES["Document"]["tmp_name"],  "uploads/".$fName))
                                {
                                   
                                         $params = array(
                                                        'Title' => $this->input->post('Title'),
                                                        'date' => $this->input->post('date'),
                                                        'location' => $this->input->post('location'),
                                                        'organised_by' => $this->input->post('organised_by'),
                                                        'website' => $this->input->post('website'),
                                                        'Description' => $this->input->post('Description'),
                                                        'Document'=>base_url()."uploads/".$fName
                                                        );
                                }
                                else
                                {
                                        $this->session->set_flashdata('message', '<div class="alert alert-danger alert-dismissible fade in" role="alert"> <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button><b>Document was not uploaded.</b></div>');
                                        redirect('workshop/index');
                                }
                        
                        
                } else { $params = array(
					'Title' => $this->input->post('Title'),
					'date' => $this->input->post('date'),
					'location' => $this->input->post('location'),
					'organised_by' => $this->input->post('organised_by'),
					'website' => $this->input->post('website'),
					'Description' => $this->input->post('Description'),
                );
                }
                $this->Workshop_model->update_workshop($WorkshopID,$params);   
                $this->session->set_flashdata('message', '<div class="alert alert-success alert-dismissible fade in" role="alert"> <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button><b>Data updated successfully.</b></div>');
                redirect('workshop/index');
            }*/
           
        }
		else
		{
			$this->session->set_flashdata('message', '<div class="alert alert-danger alert-dismissible fade in" role="alert"> <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button><b>The workshop you are trying to edit does not exist.</b></div>');
			redirect('workshop');
		}
    } 

    /*
     * Deleting workshop
     */
    function remove($WorkshopID)
    {
        if(!helper_have_rights(CV_WORKSHOP, CV_INSERT_RIGHT_NAME))
		{
			$data['msg'] = '<div class="alert alert-danger alert-dismissible fade in" role="alert"> <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button><b>You do not have insert rights.</b></div>';		
                        redirect(site_url("dashboard"));
		}
        $workshop = $this->Workshop_model->get_workshop($WorkshopID);

        // check if the workshop exists before trying to delete it
        if(isset($workshop['WorkshopID']))
        {
            $this->Workshop_model->delete_workshop($WorkshopID);
            $this->session->set_flashdata('message', '<div class="alert alert-success alert-dismissible fade in" role="alert"> <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button><b>Data deleted successfully.</b></div>');
            redirect('workshop/index');
        }
        else
            show_error('The workshop you are trying to delete does not exist.');
    }
    
}
